<?php

//hook_cron
function indiatreepix_cron() {
  // HANDLE TIME HERE
  // GET Stored time using variable_get
  // Make a call to Python script passing time as an argunemt 
  // This function will be useful in formatting time before passing to Python 
  // format_date(time(), 'custom', 'd-M-Y');
  // STORE THE Current time using variable_set

  //execute the python script to fetch mails from indiatreepix mail id
  //$output = shell_exec("cd /data/augmentedmaps/sites/all/modules/indiatreepix/; python gmail.py");
    
  $base_url  = "/data/augmentedmaps";

  //Load the dictionary of all the available Species
  $dictionary = read_file("$base_url/sites/all/modules/indiatreepix/processed_dictionary");
  //print_r($dictionary);
  
  //Process the folder to fetch information and create nodes
  //Directory to which the mails and images are downloaded
  //iterate over all the available files in the directory and create treepix content
  $directory = "$base_url/sites/all/modules/indiatreepix/detach_dir_processed_2";
  $handle = opendir($directory);
  $count = 0;

  while (false !== ($file = readdir($handle)) && $count<100){
    $extension = substr($file, strrpos($file, '.') + 1);

    if($file != "." && $file != ".." && $extension == 'xml'){
      $filename = $directory."/".$file;
      // now use file to create content in the portal
      createtreepix_content($filename, $dictionary);
      $count = $count + 1;
    }
  }
   
  //DONE
  closedir($handler);

}

/* Function to load complete file into a string 
 */
function read_file($filename)  {
  $output=array();
  $file = fopen($filename, "r");
  
  //read file line by line and build the data structure that can be used for search
  while(!feof($file)) {
    //break the line using tab space
    list($name, $alias) = explode("\t", fgets($file, 4096));
    //alias will be the key, scientific name will be the value
    //there is an assumption that there will be an entry of scientific name vs scietific name in the file
    $output[$alias] = $name;
 //   if(!array_key_exists($name, $output))
 //        $output[$name] = $name;
  }
  fclose ($file);
  return $output;
}

/**
 * Function to create the tree pix content
 */
function createtreepix_content($file, $dictionary)      {
  global $base_url;
  //print 'createtreepix_content   '.$file;
  //LOAD XML FILE INTO ARRAY
  $array_attributes = xml_parser_xml_to_array($file);
  //print_r($array_attributes); 
  $first_time = 1;
  //append all the messages into message text
  $messagetext = '';
  $submitted_date = 'Unknown';
  $submittedby = 'Unknown';
  
  
  //Replace the <email address> showing up next to user name, in submitted by
  $pattern = '/(<.*>)/';
  $replace = '';
  //REGEX for identifying the emails in the mail text
  // This is a general purpoes regex for matching with email addresses
  // This can also rmeove some thing else from text, need o be careful
  $regex = "/([\w]+@[\w]+.[\w]+)/";
  foreach ($array_attributes as $mailmessage)    { 
    //Remove the email ids in the source text submitted by user
    $messagetext = $messagetext . check_plain(preg_replace($regex, $replace, $mailmessage['messagetext']));
    if($first_time == 1)     {       //Picking Subject, submittedby, date one time is sufficient
          $title = $mailmessage['subject'];//DEFINE title here
          //Hide email ids 
          $submittedby = preg_replace($pattern, $replace, $mailmessage['from']);
          $submitted_date = $mailmessage['date'];
          $first_time = 0;        
    }
  }
  
  global $user;
  $new_node = (object) NULL;
  $new_node->type = 'indiatreepix';
  $new_node->uid = $user->uid ;
  $new_node->created = time();
  $new_node->changed = time();
  $new_node->status = 1;   
  
  $new_node->title = $title;
  $matching_species = find_matching_species($messagetext, $dictionary);
  $new_node->field_species_name = $matching_species['sceintific_name'];     //SCIENTIFIC name entered here
  $new_node->field_matching_string[0]['value'] = $matching_species['namestring'];     //Store the matching names
  //Use this in contemplate to highlight terms 
  //search_excerpt($node->field_matching_string[0]['view'], $node->field_itp_mail_text[0]['view'])

  $new_node->field_itp_mail_text[0]['value'] = $messagetext;        //MAIL Text entered here

  $new_node->field_itp_submitted_by[0][value] = $submittedby;     
  //THIS needs to be fed in carefully 

  $search_fields = array('location'=>'location', 'habitat' => 'habitat', 'plant habit' => 'planthabitat', 'planthabitat' => 'planthabitat', 'date'=>'date', 'sub family' => 'sub family', 'inflorescence' => 'inflorescence', 'flowers size' => 'flowers size', 'fruits type' => 'fruits type', 'height/length' => 'height/length', 'tribe'=>'tribe', 'leaves type' => 'leaves type'); 
  //obtain field details from the message text 
  $field_details = fetch_fields($messagetext, $search_fields);
  
  //ATTRIBUTION ??????????????????
  $new_node->field_date_time[0]['value'] = strtotime($submitted_date);
  $new_node->field_indiatreepix_location[0]['value'] = $field_details['location'];
  $new_node->field_height_length[0]['value'] = $field_details['length'];
  $new_node->field_itp_habitat[0]['value'] = $field_details['habitat'];
  $new_node->field_itp_planthabitat[0]['value'] = $field_details['planthabitat'];
  $new_node->field_itp_subfamily[0]['value'] = $field_details['sub family'];
  $new_node->field_itp_tribe[0]['value'] = $field_details['tribe'];
  $new_node->field_itp_leaves_type[0]['value'] =$field_details['leaves type'];
  $new_node->field_itp_inflorescence_type[0]['value'] =  $field_details["inflorescence"];	
  $new_node->field_itp_flowers_size[0]['value'] = $field_details['flowers_size'];
  $new_node->field_itp_fruits_type[0]['value'] = $field_details['fruits type'];
  $new_node->field_itp_miscellaneous[0]['value'] =  "miscellaneous";

  //Right now we stay in the same folder, so there is no base_dir to process
  $base_dir = 'sites/all/modules/indiatreepix';
  $filesinfo = array();
  foreach ($array_attributes as $mailmessage)      {
     if( is_array($mailmessage['attachments']))  {
	foreach($mailmessage['attachments'] as $file) {
                $file = $base_dir.substr($file, 1, strlen($file)-1);
		$fn = basename($file);
                
                $indiatreepixdir = "sites/default/files/indiatreepix/";

                // if(file_exists('/sites/default/files/treepix/'))
                //     print "yes";
		//copying from source folder to drupal's sites/default/files/treepix/
		$cp = copy($file,$indiatreepixdir.$fn);

		if($cp) {
                       // print "copied";
			$files = new stdClass();
			$files->filename = basename($file);
			$files->filepath = $indiatreepixdir.$fn;
                       // print $indiatreepixdir."<br/>";
                       // print $fn."<br/>";
                        //print $files->filepath."<br/>";
			$files->filemime = file_get_mimetype(basename($file));
			$files->filesize = filesize($file);
			$files->uid = 1;
			$files->status = FILE_STATUS_PERMANENT;
			$files->timestamp = time();

                        //CREATE a record for file in the files table
			drupal_write_record('files', $files);

			$filesinfo[] = array(
				'fid' => $files->fid,
				'title' => basename($files->filename),
				'filename' => $files->filename,
				'filepath' => $files->filepath,
				'filesize' => $files->filesize,
				'mimetype' => file_get_mimetype(basename($file)),
				'description' => basename($file),
				'list' => 1,
			);
		}
	}
    }
  }
  
  //Attach files to the new node and save it.
  //Save only the nodes which have images attached
  if(!empty($filesinfo))     {
       $new_node->field_indiatreepix_image = $filesinfo;
       node_save($new_node);
  }
}
/*
 function indiatreepix_form_alter (&$form, $form_state, $form_id) {
   $form['#submit'][] = 'itp_submit';
}
function itp_submit(&$form, $form_state)   {
 print_r($form_state);
}
*/
/**
 * Function to find the matching species names in the message text passed
 * Params dictionary, messagetext
 * Returns the scientific names of the matching species found
 * Unidentified if none of the species scientific names are identified in the messagetext passed
 */
function find_matching_species($messagetext, $dictionary)     {
  $names = array();
  $matching_string = '';

  //iterate over all the elements in the dictionary and keep the matching ones in sceintific_name
  foreach ($dictionary as $key=>$value)   {
    if(preg_match("/\b($key)\b/i", $messagetext) && !in_array($value, $names)) {
         $names[] = $value;
         $matching_string = $matching_string . $key. ' ';
     }
  }

  //Return scientific names, in a format, which can be assigned directly to the scientific name field
  $sceintific_name = array();

  //If no match found
  if(trim($matching_string) == '')
     $sceintific_name[0] = array('value'=>'Unidentified', '_remove'=>0);
  else   {
    $counter = 0;
    /** If multiple scientific names are found in the mail text, then keep all of them, let curator decide which ones to keep and which ones to leave */
    foreach($names as $value)   {
       if(trim($value))   {
         $sceintific_name[$counter] = array('value'=>$value, '_remove'=>0);
         $counter = $counter + 1;
       }
    }
  }

  return array('sceintific_name' => $sceintific_name, 'namestring' => $matching_string);
}

/**
 * Parse and obtain the field details from email message text
 */
function fetch_fields($text, $terms)  {
   $identifiers = array();
   //Find positions of elements, sort by position and save
   foreach ($terms as $term => $i) {
     $position = stripos($text, $term);   
     if($position !== false)
         $identifiers[$term] = $position;
   }
   asort($identifiers);

   $startindex = 0;
   $first = 1;
   $found = '';
   $result = array();
   //special characters to remove in the identified text
   $order   = array('/', '-' , ';', ':', '*', '=');
   $replace = '';
  
   //iterate on the elements found
   foreach ($identifiers as $term => $position) {   
          if($first == 1)   
             $first = 0;
          else      {
             $len = strlen($found);
             //$str = preg_replace("/-/i", "", substr($text, $startindex+$len, $position-($startindex+$len)));
             //remove special characters
   	     $str =str_replace($order, $replace, substr($text, $startindex+$len, $position-($startindex+$len)));
             $result[$terms[$found]] = $str;
          }
          $startindex = $position;
          $found = $term;
   }
   $len = strlen($found);
   //remove special characters
   $str =str_replace($order, $replace, substr($text, $startindex+$len, $position-($startindex+$len)));
   $result[$terms[$found]] = $str;
   return $result;
}
